"0","#1c."
"0",""
"0","k <- 10"
"0","folds <- sample(1:k, nrow(prostate), replace = TRUE)"
"0",""
"0","val_errors <- matrix(NA, nrow = k, ncol = 9)"
"0",""
"0","for (j in 1:k) {"
"0","  test <- prostate[folds == j, ]"
"0","  train <- prostate[folds != j, ]"
"0","  "
"0","  best_train <- regsubsets(lpsa ~ ., data = train, nbest = 1, nvmax = 9)"
"0","  "
"0","  for (i in 1:9) {"
"0","    test_mat <- model.matrix(lpsa ~ ., data = test)"
"0","    coef_m <- coef(best_train, id = i)"
"0","    pred <- test_mat[, names(coef_m)] %*% coef_m"
"0","    val_errors[j, i] <- mean((test$lpsa - pred)^2)"
"0","  }"
"0","}"
"0",""
"0","cv_errors <- apply(val_errors, 2, mean)"
"0",""
"0","best_model_size <- which.min(cv_errors)"
"0",""
"0","final_model <- regsubsets(lpsa ~ ., data = prostate, nvmax = best_model_size, nbest = 1)"
